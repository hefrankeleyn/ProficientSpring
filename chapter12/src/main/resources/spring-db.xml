<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <context:component-scan base-package="com.hef"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--    BasicDataSource 提供了close方法关闭数据源，所以必须设定destory-method = "close" 属性，
            以便Spring容器关闭时，数据源能够正常关闭。-->
    <bean id="dataSource"
          destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>

    <!--    通过 TransactionAwareDataSourceProxy 对数据源进行代理，
    数据源对象被代理后就具有了事务上下文感知对能力。
    通过代理数据源对getConnection() 方法获取连接和使用 DataSourceUtils.getConnection() 方法获取连接的效果是一样的。
    -->
<!--    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <property name="targetDataSource">
            <bean class="org.apache.commons.dbcp.BasicDataSource"
                  destroy-method="close"
                  p:driverClassName="${jdbc.driverClassName}"
                  p:url="${jdbc.url}"
                  p:username="${jdbc.username}"
                  p:password="${jdbc.password}"/>
        </property>
    </bean>-->

    <!-- 配置Jdbc模板  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource" />

    <!--    基于数据源的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <tx:annotation-driven/>

</beans>